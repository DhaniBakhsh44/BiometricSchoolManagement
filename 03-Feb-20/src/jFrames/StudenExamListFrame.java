/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jFrames;

import beans.*;
import DBManager.DatabaseManager;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import resources.Resources;

/**
 *
 * @author dhani
 */
public class StudenExamListFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudenExamListFrame
     */
    public StudenExamListFrame() {
        initComponents();
         try{
            Vector classesVec=DatabaseManager.getClasses();
            loadComboBox(classesVec,classCombo);
    }catch(Exception e){e.printStackTrace();}
    }
    
        private void loadComboBox(Vector<Object> obj,JComboBox combo){
        if(obj!=null)
            for(Object o:obj)
                combo.addItem(o);
    }
        
private void getStudentsCombo(){
  ClassesBean classBean=(ClassesBean)classCombo.getSelectedItem();
   SchemeBean schemeBean=(SchemeBean)schemeCombo.getSelectedItem();
    TermBean termBean=(TermBean)termCombo.getSelectedItem();
    if(classBean==null)return;
     if(schemeBean==null)return;
      if(termBean==null)return;
    
    try{
         stdCombo.removeAllItems();
          Vector stdV=DatabaseManager.getStudentTerms(classBean.getClassId(),schemeBean.getSchemeId(),termBean.getTerm());
          if(stdV.isEmpty()==true)ClearField();
          Vector tempV=new Vector();
          for(int i=0; i<stdV.size(); i++){
          StudentTermBean stdTermBean=(StudentTermBean)stdV.elementAt(i);
          StudentRegistrationBean stdReg=DatabaseManager.getStudentRegistrationByRollNo(stdTermBean.getRollNo());           
          tempV.addElement(stdReg);
            }
            loadComboBox(tempV,stdCombo);
        }catch(Exception e){
            e.printStackTrace();
        }
        }

private void getListData(){
 ClassesBean clBean=(ClassesBean)classCombo.getSelectedItem();
     SchemeBean schemeBean=(SchemeBean)schemeCombo.getSelectedItem();
     TermBean termBean=(TermBean)termCombo.getSelectedItem();
     ExamListBean examListBean=(ExamListBean)examListCombo.getSelectedItem();
     if(clBean==null)return;
      if(schemeBean==null)return;
      if(termBean==null)return;
      if(examListBean==null)return;
      
        try {
            Vector v=DatabaseManager.getExamListDetails(clBean.getClassId(),schemeBean.getSchemeId(),termBean.getTerm(),examListBean.getExamList());
            Vector temp=new Vector();
            for(int i=0; i<v.size(); i++){
                ExamListDetailBean bean=(ExamListDetailBean)v.elementAt(i);
               StudentRegistrationBean stdReg= DatabaseManager.getStudentRegistrationByRollNo(bean.getRollNo());
               temp.addElement(stdReg);
            }
            studentsList.setListData(temp);
        }catch (SQLException ex) {
            Logger.getLogger(StudenExamListFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
private void getTerm(){
    ClassesBean beanClass=(ClassesBean)classCombo.getSelectedItem(); 
    SchemeBean beanSchem=(SchemeBean)schemeCombo.getSelectedItem();
    if(beanClass==null)return;
    if(beanSchem==null)return;
     try{
        termCombo.removeAllItems();
        Vector v=DatabaseManager.getTermByClassId(beanClass.getClassId(),beanSchem.getSchemeId());
        loadComboBox(v,termCombo);
        }catch(Exception e){
        e.printStackTrace();
           }
         }
        
private void ClearField(){
    surnameField.setText("");
    sexField.setText("");
    fatherNameField.setText("");
    mobileField.setText("");
    remarksField4.setText("");
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        classCombo = new javax.swing.JComboBox<beans.SchemeBean>();
        remarksField4 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        termCombo = new javax.swing.JComboBox<beans.SchemeBean>();
        examListCombo = new javax.swing.JComboBox<beans.SchemeBean>();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        surnameLabel = new javax.swing.JLabel();
        surnameField = new javax.swing.JTextField();
        sexLabel = new javax.swing.JLabel();
        sexField = new javax.swing.JTextField();
        fatherNameField = new javax.swing.JTextField();
        mobileField = new javax.swing.JTextField();
        mobileLabel = new javax.swing.JLabel();
        fatherNameLabel = new javax.swing.JLabel();
        stdCombo = new javax.swing.JComboBox();
        schemeCombo = new javax.swing.JComboBox<beans.SchemeBean>();
        jLabel42 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        monthTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        yearTextField = new javax.swing.JTextField();
        exitBtn = new javax.swing.JButton();
        clearBtn3 = new javax.swing.JButton();
        deleteBtn3 = new javax.swing.JButton();
        updateBtn4 = new javax.swing.JButton();
        addBtn4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentsList = new javax.swing.JList();
        pasteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Exam List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 1, 12))); // NOI18N

        classCombo.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        classCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classComboActionPerformed(evt);
            }
        });

        remarksField4.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel41.setText("Class:");

        jLabel64.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel64.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel64.setText("Remarks:");

        jLabel47.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel47.setText("Term:");

        termCombo.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        termCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                termComboActionPerformed(evt);
            }
        });

        examListCombo.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        examListCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examListComboActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel48.setText("Exam List:");

        jLabel49.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel49.setText("Students:");

        surnameLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        surnameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        surnameLabel.setText("Surname:");

        surnameField.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        surnameField.setEnabled(false);

        sexLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        sexLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sexLabel.setText("Sex:");

        sexField.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        sexField.setEnabled(false);

        fatherNameField.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        fatherNameField.setEnabled(false);

        mobileField.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        mobileField.setEnabled(false);

        mobileLabel.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        mobileLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mobileLabel.setText("Mob#:");

        fatherNameLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        fatherNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        fatherNameLabel.setText("F/Name:");

        stdCombo.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        stdCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stdComboActionPerformed(evt);
            }
        });

        schemeCombo.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        schemeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemeComboActionPerformed(evt);
            }
        });

        jLabel42.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel42.setText("Scheme:");

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        jLabel2.setText("Month:");

        monthTextField.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        monthTextField.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        jLabel3.setText("Year:");

        yearTextField.setFont(new java.awt.Font("Courier New", 1, 16)); // NOI18N
        yearTextField.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel64)
                            .addComponent(mobileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel48, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surnameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fatherNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remarksField4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mobileField)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(surnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(sexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sexField, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(termCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(classCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fatherNameField)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(examListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(schemeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(stdCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(schemeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(termCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(monthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(examListCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel48)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49)
                    .addComponent(stdCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sexField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fatherNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fatherNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mobileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remarksField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        exitBtn.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        exitBtn.setText("EXIT");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        clearBtn3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        clearBtn3.setText("CLEAR");
        clearBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtn3ActionPerformed(evt);
            }
        });

        deleteBtn3.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        deleteBtn3.setText("DELETE");
        deleteBtn3.setEnabled(true);
        deleteBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtn3ActionPerformed(evt);
            }
        });

        updateBtn4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        updateBtn4.setText("UPDATE");
        updateBtn4.setEnabled(false);

        addBtn4.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        addBtn4.setText("ADD");
        addBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtn4ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Students", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 1, 14))); // NOI18N

        studentsList.setFont(new java.awt.Font("Courier New", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(studentsList);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pasteBtn.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        pasteBtn.setText("Paste List");
        pasteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateBtn4)
                        .addGap(5, 5, 5)
                        .addComponent(deleteBtn3)
                        .addGap(5, 5, 5)
                        .addComponent(clearBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(pasteBtn)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBtn3)
                    .addComponent(clearBtn3)
                    .addComponent(exitBtn)
                    .addComponent(updateBtn4)
                    .addComponent(addBtn4)
                    .addComponent(pasteBtn))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel3.getAccessibleContext().setAccessibleName("Subject");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void examListComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examListComboActionPerformed
       ExamListBean examListBean=(ExamListBean)examListCombo.getSelectedItem();
       if(examListBean==null)return;
       yearTextField.setText(""+examListBean.getSlYear());
       String month_Name[]={"Jan","Feb", "Mar"," Apr" ,"May","Jun" ,"Jul" ,"Aug" ,"Sep", "Oct", "Nov","Dec"};
      for(int i=0; i<month_Name.length; i++){
          if(examListBean.getSlMonth()==i)
             monthTextField.setText(month_Name[i-1]);
      }
    }//GEN-LAST:event_examListComboActionPerformed

    private void termComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_termComboActionPerformed
        ClassesBean classBean=(ClassesBean)classCombo.getSelectedItem();
        SchemeBean schemeBean=(SchemeBean)schemeCombo.getSelectedItem();
        TermBean termBean=(TermBean)termCombo.getSelectedItem();
        if(classBean==null)return; if(schemeBean==null)return;
        if(termBean==null)return;
        try{
            examListCombo.removeAllItems();
            Vector v=DatabaseManager.getExamListByClassId(classBean.getClassId(),schemeBean.getSchemeId(),termBean.getTerm());
            loadComboBox(v,examListCombo);
            getStudentsCombo();
        }catch(Exception e){ e.printStackTrace();}
        getListData();
    }//GEN-LAST:event_termComboActionPerformed

    private void classComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classComboActionPerformed
        ClassesBean classBean=(ClassesBean)classCombo.getSelectedItem();
        if(classBean==null)return;
        try{
             schemeCombo.removeAllItems();
             Vector v=DatabaseManager.getSchemeByClassId(classBean.getClassId());
                loadComboBox(v,schemeCombo);
                getTerm();
                getStudentsCombo();
        }catch(Exception e){e.printStackTrace();}
        getListData();
    }//GEN-LAST:event_classComboActionPerformed

    private void pasteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteBtnActionPerformed
        ClassesBean clBean=(ClassesBean)classCombo.getSelectedItem();
        SchemeBean schemBean=(SchemeBean)schemeCombo.getSelectedItem();
        TermBean termBean=(TermBean)termCombo.getSelectedItem();
        ExamListBean examListBean=(ExamListBean)examListCombo.getSelectedItem();
        if(examListBean==null)return;
        if(termBean==null)return; 
        ExamListDetailBean listDetailBean=getFieldData();
        
        try { 
            int rows=0;
            int size=stdCombo.getItemCount();
            for(int i=0; i<size; i++){
            StudentRegistrationBean std=(StudentRegistrationBean)stdCombo.getItemAt(i);
           listDetailBean.setRollNo(std.getRollNo());
            boolean b=DatabaseManager.checkStudentInExamListDetails(listDetailBean);
            if(!b){
                rows=DatabaseManager.addExamListDetail(listDetailBean);                
            }else{
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this,"Record Alrady Inserted ...");
            }
           
        }
        if(rows>0)JOptionPane.showMessageDialog(this,"Students Record Paste Sucessfully..");
         getListData();
        } catch (Exception ex) {
            Logger.getLogger(StudenExamListFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_pasteBtnActionPerformed

    private void stdComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stdComboActionPerformed
        StudentRegistrationBean stdRegBean=(StudentRegistrationBean)stdCombo.getSelectedItem();
        if(stdRegBean==null)return;
        surnameField.setText(stdRegBean.getSurname());
        sexField.setText(stdRegBean.getGender());
        fatherNameField.setText(stdRegBean.getFatherName());
        mobileField.setText(stdRegBean.getMobileNo());
    }//GEN-LAST:event_stdComboActionPerformed

    private void addBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtn4ActionPerformed
          ExamListDetailBean listDetailBean=getFieldData();
        try {
            boolean b=DatabaseManager.checkStudentInExamListDetails(listDetailBean);
            if(!b){
        
               int rows=DatabaseManager.addExamListDetail(listDetailBean);
            if(rows>0)
            JOptionPane.showMessageDialog(this,"Record Inserted Successfully...");
             getListData();
            }else{ 
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(this,"Record Already..."); 
            }
        } catch (Exception ex) {
            Logger.getLogger(StudenExamListFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addBtn4ActionPerformed

    private ExamListDetailBean getFieldData(){
    ClassesBean clBean=(ClassesBean)classCombo.getSelectedItem(); 
    SchemeBean schemBean=(SchemeBean)schemeCombo.getSelectedItem();
    TermBean termBean=(TermBean)termCombo.getSelectedItem(); 
    ExamListBean examListBean=(ExamListBean)examListCombo.getSelectedItem();
    StudentRegistrationBean std=(StudentRegistrationBean)stdCombo.getSelectedItem();
    ExamListDetailBean listDetailBean=new ExamListDetailBean();
    listDetailBean.setClassId(clBean.getClassId());
    listDetailBean.setSchemeId(schemBean.getSchemeId());
    listDetailBean.setTerm(termBean.getTerm());
    listDetailBean.setRollNo(std.getRollNo());
    listDetailBean.setExamList(examListBean.getExamList());
    listDetailBean.setStatus(1);
    
    return listDetailBean;
}
    
    private void clearBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtn3ActionPerformed
       ClearField();
    }//GEN-LAST:event_clearBtn3ActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    private void schemeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeComboActionPerformed
       getTerm();
       getStudentsCombo();
    }//GEN-LAST:event_schemeComboActionPerformed

    private void deleteBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtn3ActionPerformed
        Toolkit.getDefaultToolkit().beep();
        int opt=JOptionPane.showConfirmDialog(this,"Are You Sure Want To Delete..?","Delete Message",JOptionPane.YES_NO_OPTION);
        if(opt==0)
        deleteStduentList();
    }//GEN-LAST:event_deleteBtn3ActionPerformed

  private void deleteStduentList(){
      
      try{
        ExamListDetailBean  listDetailBean=getFieldData();
        StudentRegistrationBean stdBean=( StudentRegistrationBean)studentsList.getSelectedValue();
        if(stdBean==null){Toolkit.getDefaultToolkit().beep(); JOptionPane.showMessageDialog(this,"Kindly Select Stduent From List..");return; } 
        listDetailBean.setRollNo(stdBean.getRollNo());
        int row=DatabaseManager.deleteExamListDetail(listDetailBean);
        if(row>0)JOptionPane.showMessageDialog(this,"Delete Sucessfully...");
         getListData();
      }catch(Exception e){
          e.printStackTrace();
      }
  }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudenExamListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudenExamListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudenExamListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudenExamListFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudenExamListFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn4;
    private javax.swing.JComboBox<beans.SchemeBean> classCombo;
    private javax.swing.JButton clearBtn3;
    private javax.swing.JButton deleteBtn3;
    private javax.swing.JComboBox<beans.SchemeBean> examListCombo;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField fatherNameField;
    private javax.swing.JLabel fatherNameLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mobileField;
    private javax.swing.JLabel mobileLabel;
    private javax.swing.JTextField monthTextField;
    private javax.swing.JButton pasteBtn;
    private javax.swing.JTextField remarksField4;
    private javax.swing.JComboBox<beans.SchemeBean> schemeCombo;
    private javax.swing.JTextField sexField;
    private javax.swing.JLabel sexLabel;
    private javax.swing.JComboBox stdCombo;
    private javax.swing.JList studentsList;
    private javax.swing.JTextField surnameField;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JComboBox<beans.SchemeBean> termCombo;
    private javax.swing.JButton updateBtn4;
    private javax.swing.JTextField yearTextField;
    // End of variables declaration//GEN-END:variables
}
